@model OnlineStore.Models.Product.Product

@{
    ViewBag.Title = "Dodaj produkt";
}

<h2>Dodaj produkt</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produkt</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, "----Wybierz kategorię-----", htmlAttributes: new { id = "CategoryId", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="sizes">
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy produktów", "Index")
</div>


<script type="text/javascript">

    $(document).ready(function ()
    {
        $("#CategoryId").change(function ()
        {
            var categoryId = $("#CategoryId").val();
            var sizes = $("#sizes");
            $.ajax({
                cache: false,
                type: "GET",
                url: "@Url.Action("LoadSizes","Products",null, Request.Url.Scheme)?categoryId=" + categoryId,
                data: { "categoryId": categoryId },
                success: function (data)
                {
                    sizes.html(data);
                },
                error: function (xhr, ajaxOptions, thrownError)
                {
                    alert('Nie można pobrać rozmiarów dla wybranej kategorii');
                }
            });
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}