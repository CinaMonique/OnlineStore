@model OnlineStore.ViewModels.Products.ProductViewModel

@{
    ViewBag.Title = "Dodaj produkt";
}

<h2>Dodaj produkt</h2>

@Html.HiddenFor(model => model.CategoryId)
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produkt</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <table>
                @for (int i = 0; i < Model.ProductDetailsListViewModel.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => modelItem.ProductDetailsListViewModel[i].SizeName)
                            @Html.HiddenFor(modelItem => modelItem.ProductDetailsListViewModel[i].SizeName)
                        </td>
                        <td>
                            @Html.EditorFor(modelItem => modelItem.ProductDetailsListViewModel[i].Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(modelItem => modelItem.ProductDetailsListViewModel[i].Amount, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                }
            </table>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy produktów", "Index", new { categoryId = Model.CategoryId })
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}