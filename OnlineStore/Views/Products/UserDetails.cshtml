@using OnlineStore.Models
@model OnlineStore.ViewModels.Products.ProductViewModel

@{
    ViewBag.Title = Model.ProductName;
}

<div class="main container">
    <div id="product-container">
        <div id="product-form-container">
            <div id="product-form-center">
                <div>
                    <div id="product-images">
                        <div id="product-image-tiles">
                            @if (Model.ProductPhotos != null)
                            {
                                foreach (string photo in Model.ProductPhotos)
                                {
                                    if (File.Exists(Path.Combine(Server.MapPath("~/Images"), photo)))
                                    {
                                        <div class="image">
                                            <img src="~/Images/@Url.Content(photo)" alt="Zdjęcie produktu" class="product-photo-user-detaiis" />
                                        </div>

                                    }
                                    else
                                    {
                                        <p>
                                            Tymczasowy brak zdjęcia
                                        </p>
                                    }
                                }
                            }
                            else
                            {
                                <p>
                                    Tymczasowy brak zdjęć
                                </p>
                            }
                        </div>
                        <div id="product-preview">
                            <img id="product-preview-img" src="~/Content/AppImages/waiting.gif" alt="" />
                        </div>
                    </div>
                </div>
            </div>
            <div id="product-form-right">
                <div class="product-name">
                    @Html.DisplayFor(model => model.ProductName)
                </div>
                <div class="product-code">
                    @Html.DisplayNameFor(model => model.ProductCode):
                    @Html.DisplayFor(model => model.ProductCode)
                </div>
                <hr />
                <div class="product-price">
                    @Html.DisplayFor(model => model.Price)
                </div>
                <hr />
                <div class="product-description">
                    @Html.DisplayFor(model => model.ProductDescription)
                </div>
                <hr />
                <div class="sizes-in-details">
                    @if (Model.ProductDetailsListViewModel.Count == 1)
                    {
                        string sizeName = Model.ProductDetailsListViewModel.First().SizeName;
                        @Html.RadioButton("CheckedSize", sizeName, new { @class = " radio-sizes label-one-size", @checked = "checked" })
                        @Html.Label(sizeName, new { @class = "label-sizes" })
                    }
                    else
                    {
                        <p class="check-size">Wybierz rozmiar:</p>
                        foreach (var item in Model.ProductDetailsListViewModel)
                        {
                            <label>
                                @if (item.Amount == 0)
                                {
                                    @Html.RadioButton("CheckedSize", item.SizeName, new { @class = "radio-sizes", disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.RadioButton("CheckedSize", item.SizeName, new { @class = "radio-sizes"})
                                }
                                <span class="label-sizes">@item.SizeName</span>
                            </label>
                        }
                    }
                </div>

                <div>
                    @{
                        string addProductAction = Request.IsAuthenticated ? (User.IsInRole(RoleNames.User) ? $"addProduct({Model.ProductId})" : "") : "showLoginRequired()";
                    }
                    <button onclick="@addProductAction" class="btn btn-info @(User.IsInRole(RoleNames.Manager) || User.IsInRole(RoleNames.Admin) ? "disabled" : "")" id="add-product-button">
                        <span class="glyphicon glyphicon-shopping-cart"></span> DODAJ DO KOSZYKA
                    </button>
                </div>
                <div id="product-return-list">
                    <a href="@Url.Action("Index", "Products", new { id = Model.CategoryId})">
                        <span class="glyphicon glyphicon-chevron-left"></span>
                        Wróć do listy produktów
                    </a>
                </div>
                <hr />
                <p class="benefits"> <span class="glyphicon glyphicon-home benefit-icons"></span> Darmowa dostawa dla zamówień powyżej 150 PLN</p>
                <p class="benefits"> <span class="glyphicon glyphicon-calendar benefit-icons"></span> 30 dni na zwrot</p>
                <p class="benefits"> <span class="glyphicon glyphicon-gift benefit-icons"></span> Podaruj jako prezent</p>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="add-product-modal" role="dialog">
    <div class="modal-dialog modal-sm">
        <!-- Modal content-->
        <div class="modal-content">
            <div id="add-product-modal-body" class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info custom-button" data-dismiss="modal">Zamknij</button>
            </div>
        </div>

    </div>
</div>

<script>
    $(document).ready(function () {
        $("img.product-photo-user-detaiis").click(function () {
            changePreviewImage($(this));
        });

        setFirstImage();
    });

    function setFirstImage() {
        changePreviewImage($(".product-photo-user-detaiis:first"));
    }

    function changePreviewImage(selector) {
        var src = selector.attr("src");
        var target = $("#product-preview-img");
        if (target.attr("src") === src) {
            return false;
        }
        target.fadeTo(300, 0.30, function () {
            $(this).attr("src", src);
        }).fadeTo(200, 1);
    }

    function addProduct(id) {
        var size = $("input[name = 'CheckedSize']:checked").val();
        if (size === undefined) {
            showModalContent("Proszę wybrać rozmiar produktu");
        }
        else {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddToCart", "Cart")',
                data: '{ productId: "' + id + '", checkedSize: "'+ size + '" }',
                contentType: "application/json",
                success: function (response) {
                    showModalContent(response);
                },
                error: function(res, status, err) {
                    alert(err);
                }
            });
        }
     }

    function showLoginRequired() {
        showModalContent("Zaloguj się, aby móc dodać produkt do koszyka");
    }

    function showModalContent(message) {
        $("#add-product-modal-body").html(message);
        $("#add-product-modal").modal('toggle');
    }

</script>