@model IEnumerable<OnlineStore.ViewModels.ShoppingCart.CartItemViewModel>

@{
    ViewBag.Title = "Koszyk";
}

<h2 class="action-header">Koszyk</h2>

@if (!Model.Any())
{
    <hr />
    <img src="~/Content/AppImages/empty_cart.png" class="cart-photo">
    <p class="empty-cart">Twój koszyk jest pusty :(</p>
}
else
{
    <h5> Nie zwlekaj z zakupem, dodanie artykułów do koszyka nie oznacza ich rezerwacji </h5>
    <br />
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductSize)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    @if (File.Exists(Path.Combine(Server.MapPath("~/Images"), item.PhotoPath)))
                    {
                        <td>
                            <img src="~/Images/@Url.Content(item.PhotoPath)" alt="Zdjęcie główne" class="cart-product-photo" />
                        </td>
                    }
                    else
                    {
                        <td>
                            Brak zdjęcia
                        </td>
                    }
                    <td>
                        @Html.ActionLink(item.ProductName, "UserDetails", "Products", new { id = item.ProductId }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductSize)
                    </td>
                    <td>
                        @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { @class = "form-control quantity-cart", min = "1" } })
                        @Html.ValidationMessageFor(modelItem => item.Quantity, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <a href="@Url.Action("Delete", new {id = item.CartItemId})">
                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                            Usuń
                        </a>
                    </td>
                </tr>
            }
        </table>
        <hr/>
        <p class="total-in-cart">
            SUMA: <span id="total-prize-cart">  </span>
        </p>

        <div class="form-group cart-buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="shopping" value="Zapisz zmiany i wróc do zakupów" class="btn btn-default custom-button" />
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="order" value="Przejdź do zamówienia" class="btn btn-default custom-button" />
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}